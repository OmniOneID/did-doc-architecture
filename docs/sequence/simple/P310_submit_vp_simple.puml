@startuml P310_submit_vp_simple

'- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
' Settings
'- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'=== Header and Footer ===
header OPEN-DID Technical Specification
footer
  	Page %page% of %lastpage% at %date("yyyy-MM-dd hh:mm:ss")
end footer

'=== Title ===
title
	<size:25>VP Submission</size>
end title

'=== Options ===
' Auto numbering: ex) "<b>000." => Display as 3-digit number with leading zeros
autonumber "<b>(#)</b>"
' Hide participant box at bottom of page
'hide footbox

'=== Constants ===

!$refdoc = "Refer to separate document"
!$doc = "Refer to data specification"

'=== Participants ===
skinparam ParticipantPadding 20
skinparam BoxPadding 20
skinparam MaxMessageSize 500
skinparam MinClassWidth 80

box Mobile #OldLace
    participant "**Wallet**" as wal <<Wallet>>
    participant "**CA App**" as ca <<App>>
end box
participant "**Verifier**" as vf <<Server>>

box Trust Repository
    participant "**blockchain**" as BC <<Storage>> #WhiteSmoke
end box 

== Offer Request ==

rnote across #white    
    The Offer stage does not define standard APIs, only payload data formats are specified.
    How to deliver the Offer is outside the scope of this document.
end note

== P310-1 : Profile Request ==

activate ca

ca -> vf ++: Profile Request
    vf <-> BC: Retrieve / Respond Verifier DID Doc
return verifyProfile

== Profile Verification ==

ca <-> BC: Retrieve / Respond Verifier DID Doc
ca -> ca: Verify VerifyProfile signature
ca -> ca: Check user submission information

== Wallet Token Generation ==

rnote over wal, ca #white
    Wallet Token Generation : CA App -> Wallet
end note

== VP Generation ==

ca -> wal ++: VP Generation Request
    wal -> wal: Generate VP
    wal -> wal: User authentication
    wal -> wal: Generate VP signature
    wal -> wal: Encrypt VP
    wal -> wal: Generate AccE2e
return AccE2e, encVp

== P310-2 : VP Submission and Verification ==

ca -> vf ++: VP Verification Request
    vf -> vf: Decrypt VP
    vf -> vf: Verify nonce and AuthType
    vf <-> BC: Retrieve Holder / Issuer DID Doc
    vf -> vf: Verify VP signature
    vf -> vf: Store VP and complete transaction
return OK

deactivate ca

@enduml