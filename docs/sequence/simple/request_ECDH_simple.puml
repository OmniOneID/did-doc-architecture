@startuml request_ECDH_simple

'- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
' Configuration
'- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'=== Header and Footer ===
header OPEN-DID Technical Specification
footer
    Page %page% of %lastpage% at %date("yyyy-MM-dd hh:mm:ss")
end footer

'=== Title ===
title
    <size:25>Request ECDH</size>
end title

'=== Option ===
' Autonumber: ex) "<b>000.</b>" => Display as a 3-digit number with leading zeros
autonumber "<b>(#)</b>"
' Hide the participant box at the bottom of the page
'hide footbox

'=== Participants ===
skinparam ParticipantPadding 20
skinparam BoxPadding 20
skinparam MaxMessageSize 500
skinparam MinClassWidth 80



box Mobile #OldLace
    participant "**Wallet**" as WALLET <<Wallet>> #WhiteSmoke
    participant "**Certified App**" as CA <<App>> #WhiteSmoke    
end box

box Server #AliceBlue
    participant "**Certified Server**" as CAS <<App>> #WhiteSmoke    
end box

box TAS Provider #AliceBlue
    participant "**TAS**" as TAS <<WAS>> #WhiteSmoke
end box

box Trust Repository
    participant "**blockchain**" as BC <<Storage>> #WhiteSmoke
end box

'- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
' Constant
'- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
!$refdoc = "Refer to a separate document"
!$doc = "Refer to the data specification document"

'- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
' Content
'- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
|||


== Request ECDH ==

activate CA

CA -> CA: Prepare ECDH data and sign\
            \n* (ReqEcdh)reqEcdh\
            \n   = Create ECDH request

opt KeyAgreement Signature ON
    CA -> WALLET ++: KeyAgreement Signature Request\n{reqEcdh}
    return {signedReqEcdh}
end

CA -> TAS++ : ECDH Request
rnote right of CA #Lavender
    **[REQ : ECDH Request]**
    body : 
        messageId
        txId
        reqEcdh
end note

    opt KeyAgreement Signature ON
        TAS -> TAS: Verify reqEcdh.proof signature
    end

    TAS -> TAS: Perform ECDH\
                \n* sesKey = Session Key\
                \n* (AccEcdh)accEcdh\
                \n   = Create ECDH acceptance

    opt KeyAgreement Signature ON
        TAS -> TAS: signKeyAgree(accEcdh)
    end

return ECDH Response
rnote right of CA #Lavender
    **[RES : ECDH Response]**
    body : 
        txId
        accEcdh
end note

opt KeyAgreement Signature ON
    CA -> CA: Verify accEcdh.proof signature
end

CA -> CA: Perform ECDH\n* sesKey = Session Key

|||
|||
@enduml
