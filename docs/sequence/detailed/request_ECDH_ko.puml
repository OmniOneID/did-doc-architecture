@startuml request_ECDH_ko

'- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
' 설정
'- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'=== Header and Footer ===
header OPEN-DID 기술 규격
footer
  	Page %page% of %lastpage% at %date("yyyy-MM-dd hh:mm:ss")
end footer

'=== 제목 ===
title
	<size:25>ECDH 요청</size>
end title

'=== 옵션 ===
' 자동채번: ex) "<b>000." => 앞에 0을 채워 3자리 숫자로 표시
autonumber "<b>(#)</b>"
' 페이지 하단 participant box 숨기기
'hide footbox

'=== Panticipants ===
skinparam ParticipantPadding 20
skinparam BoxPadding 20
skinparam MaxMessageSize 500
skinparam MinClassWidth 80



box 모바일 #OldLace
    participant "**월렛**" as WALLET <<Wallet>> #WhiteSmoke
    participant "**인가앱**" as CA <<App>> #WhiteSmoke    
end box

box 서버 #AliceBlue
    participant "**인가서버**" as CAS <<App>> #WhiteSmoke    
end box

box TAS 사업자 #AliceBlue
    participant "**TAS**" as TAS <<WAS>> #WhiteSmoke
end box

box 신뢰저장소
    participant "**blockchain**" as BC <<Storage>> #WhiteSmoke
end box 

'- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
' 상수
'- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
!$refdoc = "별도 문서 참조"
!$doc = "데이터명세 문서 참조"

'- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
' 내용
'- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
|||

== ECDH 요청 ==

activate CA

CA -> WALLET: holder DID 조회

return {Holder DID}
CA -> CA: Client Nonce 생성
CA -> CA: 임시키쌍 생성
CA -> CA: ECDH 데이터 준비\
            \n* (ReqEcdh)reqEcdh\
            \n   = ECDH 요청 생성

rnote right of CA #MintCream
    **ReqEcdh** : $doc
    client|clientNonce|curve|publicKey|candidate
end note

opt KeyAgreement 서명 ON
    CA -> WALLET ++: KeyAgreement 서명 요청\n{reqEcdh}
        WALLET -> WALLET: signKeyAgree(reqEcdh)
        note right
            실제 호출 시
            * 인가앱은 원문의 해시와 keyId를 전달
            * 월렛은 서명값만 응답
        end note
    return {reqEcdh}
    rnote right of WALLET #MintCream
        **signedReqEcdh** : $doc
        client|clientNonce|curve|publicKey|candidate|Proof
        Proof = KeyAgreeProof
    end note
end



CA -> TAS++ : ECDH 요청
rnote right of CA #Lavender
    **[REQ : ECDH 요청]**
    body : 
        messageId
        txId
        reqEcdh
end note

    opt KeyAgreement 서명 ON
        TAS -> TAS: reqEcdh.proof 서명 검증
    end

    TAS -> TAS : reqEcdh 정합성 확인
    TAS -> TAS : Server Nonce 생성
    TAS -> TAS : mergedNonce 생성
    rnote right of TAS #MintCream
        **mergedNonce**
        sha256(serverNonce, clientNonce)
    end note
    TAS -> TAS: 임시키쌍 생성

    TAS -> TAS: ECDH 수행\
                \n* sesKey = 세션키\

    rnote right of TAS #MintCream
        **sesKey**
        ecies(serverPriKey|clientPubKey|mergedNonce|cipherAlg)
    end note
    TAS -> TAS: ECDH 수락 데이터 생성\
                \n* (AccEcdh)accEcdh
    rnote right of TAS #MintCream
        **accEcdh** : $doc
        server|serverNonce|cipher|publicKey|padding
    end note
    opt KeyAgreement 서명  ON
        TAS -> TAS: signKeyAgree(accEcdh)
    end

return ECDH 응답
rnote right of CA #Lavender
    **[RES : ECDH 응답]**
    body : 
        txId
        accEcdh
end note

opt KeyAgreement 서명  ON
    CA -> CA: accEcdh.proof 서명 검증
end
CA -> CA : accEcdh 정합성 확인
CA -> CA : mergedNonce 생성
rnote right of CA #MintCream
    **mergedNonce**
    sha256(serverNonce, clientNonce)
end note
CA -> CA: ECDH 수행\n* sesKey = 세션키

rnote right of CA #MintCream
    **sesKey**
    ecies(clientPriKey|serverPubKey|mergedNonce|cipherAlg)
end note

|||
|||
@enduml

